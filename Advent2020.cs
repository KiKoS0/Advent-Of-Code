using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using static Util.Utility;

namespace Advent
{
    public static class Advent2020
    {
        public static void Day1()
        {
            var data_b64 = "QlpoOTFBWSZTWVnhsqAAALBIAAAQf+BAAgpc07soinmRikImYIoGpsmkbUEiAU0IlXvOeQ8mN9v0QYCM4CglKFD5ITHQd8E3LPNLgUp1ypbEedgxrsEgWVuWo1m1iqKLBx4O2yvhjsIaz2bloiUWefUhHMdbh7SmZqdvdqzwq3rbLNI90CA63keeAhU6/KmZMFyI6VZG2u0J3zm8vOru8sipxgTUJIppCj6BLzNYeuBAdkAA5mUkFLF7era770TXwZ4db5mzuOOrwGP2iA7W2mIMrh47fiYnmXRuq9GxTdkcS8cZlPIB9E3OUraHcZVyiMiZuVnpuSqzd3NlXx53vyfQs6Oamo81jBUHQBJ5kj1qIZ5zfPu4LtoZSvrss8iCavoPEOFbmzKqLPH5fSsheRgcWd0EhbLmE6gIyAq4PmVUK2in5qmzzz7vvqMHvS+q/bOlzB8wyfroLmao7IGw1g0Dh9gBPqt7VujcZE7s6PayFhLwQ+NENW9ysoI+nKVtHMV7CIyapH4u5IpwoSCzw2VA";
            IList<int> data = (IList<int>)DecodeBase64(data_b64, '\n');

            var count = data.Count;
            for (var i = 0; i < count; ++i)
            {
                for (var j = i + 1; j < count; ++j)
                {
                    for (var k = i + 2; k < count; k++)
                    {
                        if (data[j] + data[i] + data[k] == 2020)
                        {
                            Console.WriteLine($"Found it: {data[j] * data[i] * data[k]}");
                        }
                    }

                }

            }
        }
        public static void Day2()
        {
            var data_b64 = "";
            IList<string> data = (IList<string>)DecodeBase64AsStr(data_b64, '\n');

            var count = data.Count;
            var sum = 0;
            for (var i = 0; i < count; ++i)
            {
                var item = data[i].Split(' ');
                var str = item[2];
                var chr = item[1].Trim()[0];
                var pos = item[0].Split('-').Select(x => int.Parse(x)).ToList();

                if (str[pos[0] - 1] == chr ^ str[pos[1] - 1] == chr)
                    sum++;
            }
            Console.WriteLine($"Result: {sum}");
        }
    }
}
